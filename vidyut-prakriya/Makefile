# Main commands
# ~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to stdout.
create_tinantas:
	cargo run --release --bin create_tinantas


# Generates all krdantas-prAtipadikas supported by the program and writes them to stdout.
create_krdantas:
	cargo run --release --bin create_krdantas


# Unit tests
# ~~~~~~~~~~

# Runs all unit tests in the crate.
unit_tests:
	cargo test --lib

# Generates a simple coverage report and writes it to disk as an HTML file.
coverage:
	cargo llvm-cov --html


# Integration tests
# ~~~~~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to disk.
create_test_files:
	cargo build --release
	../target/release/create_tinantas --prayoga kartari > test-files/tinantas-basic-kartari.csv
	../target/release/create_tinantas --sanadi Ric --prayoga kartari > test-files/tinantas-nic-kartari.csv
	../target/release/create_tinantas --sanadi san --prayoga kartari > test-files/tinantas-san-kartari.csv
	../target/release/create_tinantas --sanadi yaN --prayoga kartari > test-files/tinantas-yan-kartari.csv
	../target/release/create_tinantas --sanadi yaNluk --prayoga kartari > test-files/tinantas-yan-luk-kartari.csv
	../target/release/create_tinantas --prayoga karmani > test-files/tinantas-basic-karmani.csv
	../target/release/create_tinantas --sanadi Ric --prayoga karmani > test-files/tinantas-nic-karmani.csv
	../target/release/create_tinantas --sanadi san --prayoga karmani > test-files/tinantas-san-karmani.csv
	../target/release/create_tinantas --sanadi yaN --prayoga karmani > test-files/tinantas-yan-karmani.csv
	../target/release/create_krdantas --krt ktvA > test-files/krdantas-ktvA.csv
	../target/release/create_krdantas --krt kta > test-files/krdantas-kta.csv

# Runs a full evaluation over all forms generated by vidyut-prakriya. `hash` is
# the SHA-256 hash of the test file. We use `hash` to verify test file
# integrity and ensure that our test cases are stable.
#
# NOTE: test files might contain invalid forms. Our goal with this test is
# simply to confirm that the system hasn't changed in unexpected ways.
test_all: test_tinantas test_krdantas

test_tinantas:
	cargo build --release
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-basic-kartari.csv \
	  --hash "ff57ac933f1a44a21285448f1b064d1b4464a7aee650981cb30244c8ee3ed111"
	../target/release/test_tinantas \
  	--test-cases test-files/tinantas-nic-kartari.csv \
    --hash "263fa8bc08eeb912ffe4daa876452a1bea1a4117620d4e3d86aa876f03795140"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-san-kartari.csv \
		--hash "c9c2c2e79eecf4a6bbe105537ceb64f77004ce3ff3b53a07a4ac410f0131de0e"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-yan-kartari.csv \
		--hash "585c83fa6a241d7f31d2b12e7382e65d05b3f7703edaa1609ee3617810aa74d2"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-yan-luk-kartari.csv \
		--hash "9168fb70bce7903708004da407dfe1c14aedc199ab770c2ee524b7f573233cfc"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-basic-karmani.csv \
    --hash "63d076bf9d8b88d7a03f224626410ec2be751f2b50ef0f0777c5cddcecad3dfd"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-nic-karmani.csv \
    --hash "2b9aa1158d26ce7a9da28f7ec8685ce61554daa3f8434770aec3e16e000eefe2"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-san-karmani.csv \
    --hash "e60669056aec2124c27c8d60f3cebe19b75e11d193e87522458be06291db221f"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-yan-karmani.csv \
    --hash "7e0ed1e074eff8eb104dc88b8cf7525d1e28b8686bb82dccb9d036a4696caed7"

test_krdantas:
	cargo build --release
	../target/release/test_krdantas \
		--test-cases test-files/krdantas-ktvA.csv \
	    --hash "6d480b70491153eeac8958d5f66c32e4e3e428f54c6e0fc2d75154889642ef7b"
	../target/release/test_krdantas \
		--test-cases test-files/krdantas-kta.csv \
	    --hash "bb99612ddcc34a66aff16553ed325f8b1a09d4bfcc920f86d312c959c6b1800b"

test_subantas:
	cargo run --bin test_subantas -- \
		--test-cases test-files/subantas.csv

check_rule_coverage:
	./scripts/check_rule_coverage.py > report.log 


# Performance
# ~~~~~~~~~~~

# Profiles the program's execution time on OSX. This command will probably not
# work on other operating systems.
profile-time-osx:
	cargo instruments -t time --release --bin create_test_file


# Other
# ~~~~~

# Generates project docs and opens them in your default browser.
docs:
	cargo doc --no-deps --open


# Web builds
# ----------

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a release build. Creating it will be slower but smaller and (perhaps)
# more performant.
wasm_release:
	wasm-pack build --target web --release

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a dev build. Creating it will be faster, but size and performance
# will not be optimized.
wasm_dev:
	wasm-pack build --target web

# Builds a simple web debugger.
debugger:
	./scripts/run-debugger.sh
