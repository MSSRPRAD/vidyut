# Main commands
# ~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to stdout.
create_tinantas:
	cargo run --release --bin create_tinantas


# Generates all krdantas-prAtipadikas supported by the program and writes them to stdout.
create_krdantas:
	cargo run --release --bin create_krdantas


# Unit tests
# ~~~~~~~~~~

# Runs all unit tests in the crate.
unit_tests:
	cargo test --lib

# Generates a simple coverage report and writes it to disk as an HTML file.
coverage:
	cargo llvm-cov --html


# Integration tests
# ~~~~~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to disk.
create_test_files:
	cargo build --release
	../target/release/create_tinantas --prayoga kartari > test-files/tinantas-basic-kartari.csv
	../target/release/create_tinantas --sanadi Ric --prayoga kartari > test-files/tinantas-nic-kartari.csv
	../target/release/create_tinantas --sanadi san --prayoga kartari > test-files/tinantas-san-kartari.csv
	../target/release/create_tinantas --sanadi yaN --prayoga kartari > test-files/tinantas-yan-kartari.csv
	../target/release/create_tinantas --prayoga karmani > test-files/tinantas-basic-karmani.csv
	../target/release/create_krdantas --krt ktvA > test-files/krdantas-ktvA.csv
	../target/release/create_krdantas --krt kta > test-files/krdantas-kta.csv

create_subantas:
	# Work-in-progress tests for subantas.
	cargo run --bin create_subantas > test-files/subantas.csv

# Runs a full evaluation over all forms generated by vidyut-prakriya. `hash` is
# the SHA-256 hash of the test file. We use `hash` to verify test file
# integrity and ensure that our test cases are stable.
#
# NOTE: test files might contain invalid forms. Our goal with this test is
# simply to confirm that the system hasn't changed in unexpected ways.
test_all: test_tinantas test_krdantas

test_tinantas:
	cargo build --release
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-basic-kartari.csv \
	  --hash "f8934f99631e811c333c41ddd4925229d2faab0dd875bc549bb38350319706db"
	../target/release/test_tinantas \
  	--test-cases test-files/tinantas-nic-kartari.csv \
    --hash "5e173e6665872f205f8c6ca2addc166e221f0d435b800dee4360116d0a8af69b"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-san-kartari.csv \
		--hash "a4bce1c19d54ea2246429dbd345acaca24c380ac3b8c888ddb442e9d862af679"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-yan-kartari.csv \
		--hash "b8c4b3cf7a7e5572af8a1290118f629fbf6812925fe6a41bf9ffadb47a658446"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-basic-karmani.csv \
    --hash "da0e4771bec284661bfd0f537734d44eb6e019e41a387e80dfaa80cf7dc27b03"

test_krdantas:
	cargo build --release
	../target/release/test_krdantas \
		--test-cases test-files/krdantas-ktvA.csv \
	    --hash "13cd3088b99eeea4d30d91e58f28ad07e9082e6f92f122ff64f4c367dd4ff36c"
	../target/release/test_krdantas \
		--test-cases test-files/krdantas-kta.csv \
	    --hash "650a4bc2e761f201389595785a5e6ab8a3023f657c58699aa269c01d28c75aae"

test_subantas:
	cargo run --bin test_subantas -- \
		--test-cases test-files/subantas.csv

check_rule_coverage:
	./scripts/check_rule_coverage.py > report.log 


# Performance
# ~~~~~~~~~~~

# Profiles the program's execution time on OSX. This command will probably not
# work on other operating systems.
profile-time-osx:
	cargo instruments -t time --release --bin create_test_file


# Other
# ~~~~~

# Generates project docs and opens them in your default browser.
docs:
	cargo doc --no-deps --open


# Web builds
# ----------

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a release build. Creating it will be slower but smaller and (perhaps)
# more performant.
wasm_release:
	wasm-pack build --target web --release

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a dev build. Creating it will be faster, but size and performance
# will not be optimized.
wasm_dev:
	wasm-pack build --target web

# Builds a simple web debugger.
debugger:
	./scripts/run-debugger.sh
